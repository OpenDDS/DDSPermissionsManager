# Copyright 2023 DDS Permissions Manager Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
micronaut:
  application:
    name: "DDS Permissions Manager"
---
netty:
  default:
    allocator:
      max-order: 3
---
micronaut:
  views:
    freemarker:
      default-extension: "ftlx"
---
micronaut:
  security:
    token:
      refresh:
        cookie:
          cookie-path: /
          cookie-max-age: 1d
      cookie:
        cookie-max-age: 1h
    authentication: cookie
    oauth2:
      login-uri: "/api/oauth/login{/provider}"
      callback-uri: "/api/oauth/callback{/provider}"
      clients:
        google:
          # client-id: Provide client-id.
          # client-secret: Provide client-secret.
          openid:
            authorization:
              prompt: select_account
            issuer: "https://accounts.google.com"
    endpoints:
      introspection:
        path: /api/token_info
      logout:
        path: /api/logout
        get-allowed: true
      login:
        path: /api/login
      oauth:
        path: /api/oauth/access_token
    intercept-url-map:
      - pattern: /favicon.png
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /smui.css
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /_app/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /applications/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /groups/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /auth/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /topics/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /topic-sets/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /grants/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /durations/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /action-intervals/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /users/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /failed-auth/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /search/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /login-failed.html
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /info
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /assets/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        http-method: GET
        access:
          - isAnonymous()
      - pattern: /swagger/**
        http-method: GET
        access:
          - isAnonymous()
---
datasources:
  default:
    db-type: ${DPM_DB_TYPE}
jpa:
  default:
    entity-scan:
      packages: "io.unityfoundation.dds.permissions.manager"
    properties:
      hibernate:
        hbm2ddl:
          auto: ${DPM_AUTO_SCHEMA_GEN:update}
---
micronaut:
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      default:
        paths: classpath:public
        mapping: /**
        enabled: true
---
micronaut:
  endpoints:
    info:
      enabled: true
      sensitive: false
---
gcp:
  credentials:
    enabled: false
  project-id: replaceme
---
permissions-manager:
  application:
    jwt:
      signature:
        public: ${JWT_PUBLIC_KEY}
        private: ${JWT_PRIVATE_KEY}
    grant-token:
      time-expiry: 48 # in hours
    client-certificate:
      time-expiry: 365 # in days
    permissions-file:
      domain: 1
    passphrase:
      length: 16
  websockets:
    broadcast-changes: ${DPM_WEBSOCKETS_BROADCAST_CHANGES:false}